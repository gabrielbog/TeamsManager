@model TeamsManager.Models.UserModel
@{ ViewBag.Title = "Home Page"; }

<link rel="stylesheet" href="~/Content/style.css">

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("Teams Manager", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Home", "Index", "Home")</li>
                <li>@Html.ActionLink("About", "About", "Home")</li>
                <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                <li>@Html.ActionLink("Log In", "LogIn", "User")</li>
            </ul>
        </div>
    </div>
</div>

<main class="home">
    <div class="left">
        <h1>Left area</h1>
    </div>
    <div class="right">
        <h1>Login</h1>

        <hr />

        @using (Html.BeginForm("LogIn", "User", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            @Html.TextBoxFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username)
            @Html.TextBoxFor(model => model.Parola, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Parola)

            <input type="submit" value="Login">
        }

        <button id="signup-btn">Sign Up</button>
    </div>
</main>

<div id="signup-modal" class="modal">
    <div class="modal-content">
        <h1>Sign Up</h1>
        <hr />
        @using (Html.BeginForm("Register", "User", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            @Html.TextBoxFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username)
            <br />
                            @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email)
                            <br />
                                            @Html.TextBoxFor(model => model.Parola, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Parola)
                                            <br />
                                            <input type="submit" value="Sign Up">
                                        }
    </div>
</div>

<script>
    // Get the modal
    var modal = document.getElementById("signup-modal");

    // Get the button that opens the modal
    var btn = document.getElementById("signup-btn");

    // When the user clicks the button, open the modal
    btn.onclick = function () {
        modal.style.display = "block";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>